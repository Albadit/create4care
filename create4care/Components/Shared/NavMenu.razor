<header>
    <input type="checkbox" id="toggleSidebar">
    <div class="header-title">
        <label for="toggleSidebar" class="hamburger-menu">
            <span></span>
            <span></span>
            <span></span>
        </label>
        <span>@Name</span>
    </div>
    <div class="sidebar">
        <div class="content">
            <nav class="nav-header">
                @foreach (var menuSection in navMenuModel.MenuSections)
                {
                    <section>
                        <span>@menuSection.Header</span>
                        @foreach (var item in menuSection.NavItems)
                        {
                            <NavLink href="@item.Href" draggable="false" Match="@(item.Href == "/" ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                                @item.Icon
                                @item.Name
                            </NavLink>
                        }
                    </section>
                }
            </nav>
            <nav class="nav-footer">
                @foreach (var item in navMenuFooterItems)
                {
                    <NavLink href="@item.Href" draggable="false">
                        @item.Icon
                        @item.Name
                    </NavLink>
                }
            </nav>
        </div>
        <label for="toggleSidebar" class="close-sidebar"></label>
    </div>
</header>

@code {
    [Parameter]
    public string Name { get; set; } = "Page";

    NavMenuModel navMenuModel = new NavMenuModel
    {
        MenuSections = new List<MenuSection>
        {
            new MenuSection
            {
                Header = "Overview",
                NavItems = new List<NavItem>
                {
                    new NavItem { Name = "Home", Href = "/", Icon = @<IconHome /> },
                    new NavItem { Name = "Bluetooth", Href = "/bluetooth", Icon = @<IconBluetooth /> },
                    new NavItem { Name = "Instruction", Href = "/instruction", Icon = @<IconInstruction /> },
                    new NavItem { Name = "Measuring", Href = "/measuring", Icon =  @<IconMeasuring /> },
                    new NavItem { Name = "Settings", Href = "/settings", Icon = @<IconSettings /> },
                    new NavItem { Name = "Test", Href = "/test", Icon = @<IconSettings /> }
                }
            }
        }
    };

    List<NavItem> navMenuFooterItems = new List<NavItem>
    {
        new NavItem { Name = "Help & Information", Href = "/help", Icon = @<IconInfo /> },
        new NavItem { Name = "Log Out", Href = "/logout", Icon = @<IconLogout /> },
        new NavItem { Name = "Login", Href = "/login", Icon = @<IconLogin /> },
    };
}

<style>
/* Toggle and Header */
#toggleSidebar { 
    display: none; 
}

.header-title {
    display: flex;
    align-items: center;
    gap: 20px;
}

.header-title > span { 
    font-weight: 600;
    font-size: 20px;
}

/* Hamburger Menu */
.hamburger-menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 4px;
    padding: 10px;
    margin: -10px;
}

.hamburger-menu span {
    width: 22px;
    height: 2px;
    border-radius: 5px;
    background-color: var(--clr-hamburger-menu);
}

/* Sidebar and Content */
.sidebar {
    z-index: 100;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100dvh;
    display: flex;
    pointer-events: none;
    transition: background-color 0.3s ease;
}

.content {
    width: max-content;
    padding: 20px 26px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background: var(--clr-background);
    transform: translateX(-100%);
    transition: transform 0.3s ease;
    pointer-events: auto;
}

.close-sidebar {
    flex: 1;
    cursor: pointer;
}

#toggleSidebar:checked ~ .sidebar {
    pointer-events: auto;
    background-color: var(--clr-link);
}

#toggleSidebar:checked ~ .sidebar > .content {
    transform: translateX(0);
}

/* Navigation */
.nav-header {
    overflow: auto;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.nav-header section {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.sidebar span {
    font-weight: 500;
    padding: 10px 0;
    font-size: 14px;
    color: var(--clr-text-menu);
}

.sidebar a {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    border-radius: 8px;
    color: var(--clr-text-menu);
    text-decoration: none;
}

.nav-header a { 
    font-weight: 600; 
}

.nav-footer a { 
    font-weight: 500;
}

.nav-footer svg,
.nav-footer svg path,
.nav-footer svg rect,
.nav-footer svg circle,
.nav-footer svg ellipse,
.nav-footer svg line,
.nav-footer svg polygon,
.nav-footer svg polyline
{
    stroke-width: 1.2px;
}

.sidebar svg {
    width: 22px;
    fill: var(--clr-text-menu);
}

/* Images and Hover/Active States */
.sidebar a:hover,
.active {
    background-color: var(--clr-link);
    color: var(--clr-text) !important;
}

.sidebar a:hover svg,
.active svg {
    fill: var(--clr-text) !important;
}
</style>